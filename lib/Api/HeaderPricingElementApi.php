<?php
/**
 * HeaderPricingElementApi
 * PHP version 7.4
 *
 * @category Class
 * @package  BeLenka\SAP\BillingDocumentRCG2
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Billing Document - Read, Cancel, GetPDF
 *
 * Consumers of this inbound service can read and cancel billing documents inside your system by sending OData requests. In addition, they can request entire billing documents in PDF format. The service makes billing document data available through its header, item, business partner, and pricing element entities.
 *
 * The version of the OpenAPI document: 1.1.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace BeLenka\SAP\BillingDocumentRCG2\Api;

use GuzzleHttp\Client;
use GuzzleHttp\ClientInterface;
use GuzzleHttp\Exception\ConnectException;
use GuzzleHttp\Exception\RequestException;
use GuzzleHttp\Psr7\MultipartStream;
use GuzzleHttp\Psr7\Request;
use GuzzleHttp\RequestOptions;
use BeLenka\SAP\BillingDocumentRCG2\ApiException;
use BeLenka\SAP\BillingDocumentRCG2\Configuration;
use BeLenka\SAP\BillingDocumentRCG2\HeaderSelector;
use BeLenka\SAP\BillingDocumentRCG2\ObjectSerializer;

/**
 * HeaderPricingElementApi Class Doc Comment
 *
 * @category Class
 * @package  BeLenka\SAP\BillingDocumentRCG2
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class HeaderPricingElementApi
{
    /**
     * @var ClientInterface
     */
    protected $client;

    /**
     * @var Configuration
     */
    protected $config;

    /**
     * @var HeaderSelector
     */
    protected $headerSelector;

    /**
     * @var int Host index
     */
    protected $hostIndex;

    /** @var string[] $contentTypes **/
    public const contentTypes = [
        'aBillingDocumentBillingDocumentToPricingElementGet' => [
            'application/json',
        ],
        'aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet' => [
            'application/json',
        ],
        'aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToBillingDocumentGet' => [
            'application/json',
        ],
        'aBillingDocumentPrcgElmntGet' => [
            'application/json',
        ],
    ];

/**
     * @param ClientInterface $client
     * @param Configuration   $config
     * @param HeaderSelector  $selector
     * @param int             $hostIndex (Optional) host index to select the list of hosts if defined in the OpenAPI spec
     */
    public function __construct(
        ClientInterface $client = null,
        Configuration $config = null,
        HeaderSelector $selector = null,
        $hostIndex = 0
    ) {
        $this->client = $client ?: new Client();
        $this->config = $config ?: new Configuration();
        $this->headerSelector = $selector ?: new HeaderSelector();
        $this->hostIndex = $hostIndex;
    }

    /**
     * Set the host index
     *
     * @param int $hostIndex Host index (required)
     */
    public function setHostIndex($hostIndex): void
    {
        $this->hostIndex = $hostIndex;
    }

    /**
     * Get the host index
     *
     * @return int Host index
     */
    public function getHostIndex()
    {
        return $this->hostIndex;
    }

    /**
     * @return Configuration
     */
    public function getConfig()
    {
        return $this->config;
    }

    /**
     * Operation aBillingDocumentBillingDocumentToPricingElementGet
     *
     * Reads the header pricing elements of a specific billing document.
     *
     * @param  string $billing_document Billing Document (required)
     * @param  int $top Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)
     * @param  int $skip Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string $filter Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)
     * @param  string $inlinecount Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)
     * @param  string[] $orderby Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aBillingDocumentBillingDocumentToPricingElementGet'] to see the possible values for this operation
     *
     * @throws \BeLenka\SAP\BillingDocumentRCG2\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \BeLenka\SAP\BillingDocumentRCG2\Model\Wrapper3|\BeLenka\SAP\BillingDocumentRCG2\Model\Error
     */
    public function aBillingDocumentBillingDocumentToPricingElementGet($billing_document, $top = null, $skip = null, $filter = null, $inlinecount = null, $orderby = null, $select = null, $expand = null, string $contentType = self::contentTypes['aBillingDocumentBillingDocumentToPricingElementGet'][0])
    {
        list($response) = $this->aBillingDocumentBillingDocumentToPricingElementGetWithHttpInfo($billing_document, $top, $skip, $filter, $inlinecount, $orderby, $select, $expand, $contentType);
        return $response;
    }

    /**
     * Operation aBillingDocumentBillingDocumentToPricingElementGetWithHttpInfo
     *
     * Reads the header pricing elements of a specific billing document.
     *
     * @param  string $billing_document Billing Document (required)
     * @param  int $top Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)
     * @param  int $skip Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string $filter Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)
     * @param  string $inlinecount Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)
     * @param  string[] $orderby Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aBillingDocumentBillingDocumentToPricingElementGet'] to see the possible values for this operation
     *
     * @throws \BeLenka\SAP\BillingDocumentRCG2\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \BeLenka\SAP\BillingDocumentRCG2\Model\Wrapper3|\BeLenka\SAP\BillingDocumentRCG2\Model\Error, HTTP status code, HTTP response headers (array of strings)
     */
    public function aBillingDocumentBillingDocumentToPricingElementGetWithHttpInfo($billing_document, $top = null, $skip = null, $filter = null, $inlinecount = null, $orderby = null, $select = null, $expand = null, string $contentType = self::contentTypes['aBillingDocumentBillingDocumentToPricingElementGet'][0])
    {
        $request = $this->aBillingDocumentBillingDocumentToPricingElementGetRequest($billing_document, $top, $skip, $filter, $inlinecount, $orderby, $select, $expand, $contentType);

        try {
            $options = $this->createHttpClientOption();
            try {
                $response = $this->client->send($request, $options);
            } catch (RequestException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    (int) $e->getCode(),
                    $e->getResponse() ? $e->getResponse()->getHeaders() : null,
                    $e->getResponse() ? (string) $e->getResponse()->getBody() : null
                );
            } catch (ConnectException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    (int) $e->getCode(),
                    null,
                    null
                );
            }

            $statusCode = $response->getStatusCode();

            if ($statusCode < 200 || $statusCode > 299) {
                throw new ApiException(
                    sprintf(
                        '[%d] Error connecting to the API (%s)',
                        $statusCode,
                        (string) $request->getUri()
                    ),
                    $statusCode,
                    $response->getHeaders(),
                    (string) $response->getBody()
                );
            }

            switch($statusCode) {
                case 200:
                    if ('\BeLenka\SAP\BillingDocumentRCG2\Model\Wrapper3' === '\SplFileObject') {
                        $content = $response->getBody(); //stream goes to serializer
                    } else {
                        $content = (string) $response->getBody();
                        if ('\BeLenka\SAP\BillingDocumentRCG2\Model\Wrapper3' !== 'string') {
                            $content = json_decode($content);
                        }
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\BeLenka\SAP\BillingDocumentRCG2\Model\Wrapper3', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                
            }

            $returnType = '\BeLenka\SAP\BillingDocumentRCG2\Model\Wrapper3';
            if ($returnType === '\SplFileObject') {
                $content = $response->getBody(); //stream goes to serializer
            } else {
                $content = (string) $response->getBody();
                if ($returnType !== 'string') {
                    $content = json_decode($content);
                }
            }

            return [
                ObjectSerializer::deserialize($content, $returnType, []),
                $response->getStatusCode(),
                $response->getHeaders()
            ];

        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\BeLenka\SAP\BillingDocumentRCG2\Model\Wrapper3',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                
            }
            throw $e;
        }
    }

    /**
     * Operation aBillingDocumentBillingDocumentToPricingElementGetAsync
     *
     * Reads the header pricing elements of a specific billing document.
     *
     * @param  string $billing_document Billing Document (required)
     * @param  int $top Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)
     * @param  int $skip Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string $filter Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)
     * @param  string $inlinecount Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)
     * @param  string[] $orderby Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aBillingDocumentBillingDocumentToPricingElementGet'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function aBillingDocumentBillingDocumentToPricingElementGetAsync($billing_document, $top = null, $skip = null, $filter = null, $inlinecount = null, $orderby = null, $select = null, $expand = null, string $contentType = self::contentTypes['aBillingDocumentBillingDocumentToPricingElementGet'][0])
    {
        return $this->aBillingDocumentBillingDocumentToPricingElementGetAsyncWithHttpInfo($billing_document, $top, $skip, $filter, $inlinecount, $orderby, $select, $expand, $contentType)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Operation aBillingDocumentBillingDocumentToPricingElementGetAsyncWithHttpInfo
     *
     * Reads the header pricing elements of a specific billing document.
     *
     * @param  string $billing_document Billing Document (required)
     * @param  int $top Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)
     * @param  int $skip Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string $filter Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)
     * @param  string $inlinecount Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)
     * @param  string[] $orderby Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aBillingDocumentBillingDocumentToPricingElementGet'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function aBillingDocumentBillingDocumentToPricingElementGetAsyncWithHttpInfo($billing_document, $top = null, $skip = null, $filter = null, $inlinecount = null, $orderby = null, $select = null, $expand = null, string $contentType = self::contentTypes['aBillingDocumentBillingDocumentToPricingElementGet'][0])
    {
        $returnType = '\BeLenka\SAP\BillingDocumentRCG2\Model\Wrapper3';
        $request = $this->aBillingDocumentBillingDocumentToPricingElementGetRequest($billing_document, $top, $skip, $filter, $inlinecount, $orderby, $select, $expand, $contentType);

        return $this->client
            ->sendAsync($request, $this->createHttpClientOption())
            ->then(
                function ($response) use ($returnType) {
                    if ($returnType === '\SplFileObject') {
                        $content = $response->getBody(); //stream goes to serializer
                    } else {
                        $content = (string) $response->getBody();
                        if ($returnType !== 'string') {
                            $content = json_decode($content);
                        }
                    }

                    return [
                        ObjectSerializer::deserialize($content, $returnType, []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                },
                function ($exception) {
                    $response = $exception->getResponse();
                    $statusCode = $response->getStatusCode();
                    throw new ApiException(
                        sprintf(
                            '[%d] Error connecting to the API (%s)',
                            $statusCode,
                            $exception->getRequest()->getUri()
                        ),
                        $statusCode,
                        $response->getHeaders(),
                        (string) $response->getBody()
                    );
                }
            );
    }

    /**
     * Create request for operation 'aBillingDocumentBillingDocumentToPricingElementGet'
     *
     * @param  string $billing_document Billing Document (required)
     * @param  int $top Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)
     * @param  int $skip Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string $filter Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)
     * @param  string $inlinecount Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)
     * @param  string[] $orderby Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aBillingDocumentBillingDocumentToPricingElementGet'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function aBillingDocumentBillingDocumentToPricingElementGetRequest($billing_document, $top = null, $skip = null, $filter = null, $inlinecount = null, $orderby = null, $select = null, $expand = null, string $contentType = self::contentTypes['aBillingDocumentBillingDocumentToPricingElementGet'][0])
    {

        // verify the required parameter 'billing_document' is set
        if ($billing_document === null || (is_array($billing_document) && count($billing_document) === 0)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $billing_document when calling aBillingDocumentBillingDocumentToPricingElementGet'
            );
        }
        if (strlen($billing_document) > 10) {
            throw new \InvalidArgumentException('invalid length for "$billing_document" when calling HeaderPricingElementApi.aBillingDocumentBillingDocumentToPricingElementGet, must be smaller than or equal to 10.');
        }
        
        if ($top !== null && $top < 0) {
            throw new \InvalidArgumentException('invalid value for "$top" when calling HeaderPricingElementApi.aBillingDocumentBillingDocumentToPricingElementGet, must be bigger than or equal to 0.');
        }
        
        if ($skip !== null && $skip < 0) {
            throw new \InvalidArgumentException('invalid value for "$skip" when calling HeaderPricingElementApi.aBillingDocumentBillingDocumentToPricingElementGet, must be bigger than or equal to 0.');
        }
        


        
        
        

        $resourcePath = '/A_BillingDocument(\'{BillingDocument}\')/to_PricingElement';
        $formParams = [];
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $multipart = false;

        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $top,
            '$top', // param base name
            'integer', // openApiType
            'form', // style
            true, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $skip,
            '$skip', // param base name
            'integer', // openApiType
            'form', // style
            true, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $filter,
            '$filter', // param base name
            'string', // openApiType
            'form', // style
            true, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $inlinecount,
            '$inlinecount', // param base name
            'string', // openApiType
            'form', // style
            true, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $orderby,
            '$orderby', // param base name
            'array', // openApiType
            'form', // style
            false, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $select,
            '$select', // param base name
            'array', // openApiType
            'form', // style
            false, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $expand,
            '$expand', // param base name
            'array', // openApiType
            'form', // style
            false, // explode
            false // required
        ) ?? []);


        // path params
        if ($billing_document !== null) {
            $resourcePath = str_replace(
                '{' . 'BillingDocument' . '}',
                ObjectSerializer::toPathValue($billing_document),
                $resourcePath
            );
        }


        $headers = $this->headerSelector->selectHeaders(
            ['application/json', ],
            $contentType,
            $multipart
        );

        // for model (json/xml)
        if (count($formParams) > 0) {
            if ($multipart) {
                $multipartContents = [];
                foreach ($formParams as $formParamName => $formParamValue) {
                    $formParamValueItems = is_array($formParamValue) ? $formParamValue : [$formParamValue];
                    foreach ($formParamValueItems as $formParamValueItem) {
                        $multipartContents[] = [
                            'name' => $formParamName,
                            'contents' => $formParamValueItem
                        ];
                    }
                }
                // for HTTP post (form)
                $httpBody = new MultipartStream($multipartContents);

            } elseif (stripos($headers['Content-Type'], 'application/json') !== false) {
                # if Content-Type contains "application/json", json_encode the form parameters
                $httpBody = json_encode($formParams);
            } else {
                // for HTTP post (form)
                $httpBody = ObjectSerializer::buildQuery($formParams);
            }
        }

        // this endpoint requires HTTP basic authentication
        if (!empty($this->config->getUsername()) || !(empty($this->config->getPassword()))) {
            $headers['Authorization'] = 'Basic ' . base64_encode($this->config->getUsername() . ":" . $this->config->getPassword());
        }

        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $operationHost = $this->config->getHost();
        $query = ObjectSerializer::buildQuery($queryParams);
        return new Request(
            'GET',
            $operationHost . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Operation aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet
     *
     * Reads the header pricing elements of a specific billing document and specific pricing element.
     *
     * @param  string $billing_document Billing Document (required)
     * @param  string $pricing_procedure_step Step Number (required)
     * @param  string $pricing_procedure_counter Condition Counter (required)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet'] to see the possible values for this operation
     *
     * @throws \BeLenka\SAP\BillingDocumentRCG2\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \BeLenka\SAP\BillingDocumentRCG2\Model\ABillingDocumentPrcgElmntType|\BeLenka\SAP\BillingDocumentRCG2\Model\Error
     */
    public function aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet($billing_document, $pricing_procedure_step, $pricing_procedure_counter, $select = null, $expand = null, string $contentType = self::contentTypes['aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet'][0])
    {
        list($response) = $this->aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGetWithHttpInfo($billing_document, $pricing_procedure_step, $pricing_procedure_counter, $select, $expand, $contentType);
        return $response;
    }

    /**
     * Operation aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGetWithHttpInfo
     *
     * Reads the header pricing elements of a specific billing document and specific pricing element.
     *
     * @param  string $billing_document Billing Document (required)
     * @param  string $pricing_procedure_step Step Number (required)
     * @param  string $pricing_procedure_counter Condition Counter (required)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet'] to see the possible values for this operation
     *
     * @throws \BeLenka\SAP\BillingDocumentRCG2\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \BeLenka\SAP\BillingDocumentRCG2\Model\ABillingDocumentPrcgElmntType|\BeLenka\SAP\BillingDocumentRCG2\Model\Error, HTTP status code, HTTP response headers (array of strings)
     */
    public function aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGetWithHttpInfo($billing_document, $pricing_procedure_step, $pricing_procedure_counter, $select = null, $expand = null, string $contentType = self::contentTypes['aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet'][0])
    {
        $request = $this->aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGetRequest($billing_document, $pricing_procedure_step, $pricing_procedure_counter, $select, $expand, $contentType);

        try {
            $options = $this->createHttpClientOption();
            try {
                $response = $this->client->send($request, $options);
            } catch (RequestException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    (int) $e->getCode(),
                    $e->getResponse() ? $e->getResponse()->getHeaders() : null,
                    $e->getResponse() ? (string) $e->getResponse()->getBody() : null
                );
            } catch (ConnectException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    (int) $e->getCode(),
                    null,
                    null
                );
            }

            $statusCode = $response->getStatusCode();

            if ($statusCode < 200 || $statusCode > 299) {
                throw new ApiException(
                    sprintf(
                        '[%d] Error connecting to the API (%s)',
                        $statusCode,
                        (string) $request->getUri()
                    ),
                    $statusCode,
                    $response->getHeaders(),
                    (string) $response->getBody()
                );
            }

            switch($statusCode) {
                case 200:
                    if ('\BeLenka\SAP\BillingDocumentRCG2\Model\ABillingDocumentPrcgElmntType' === '\SplFileObject') {
                        $content = $response->getBody(); //stream goes to serializer
                    } else {
                        $content = (string) $response->getBody();
                        if ('\BeLenka\SAP\BillingDocumentRCG2\Model\ABillingDocumentPrcgElmntType' !== 'string') {
                            $content = json_decode($content);
                        }
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\BeLenka\SAP\BillingDocumentRCG2\Model\ABillingDocumentPrcgElmntType', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                
            }

            $returnType = '\BeLenka\SAP\BillingDocumentRCG2\Model\ABillingDocumentPrcgElmntType';
            if ($returnType === '\SplFileObject') {
                $content = $response->getBody(); //stream goes to serializer
            } else {
                $content = (string) $response->getBody();
                if ($returnType !== 'string') {
                    $content = json_decode($content);
                }
            }

            return [
                ObjectSerializer::deserialize($content, $returnType, []),
                $response->getStatusCode(),
                $response->getHeaders()
            ];

        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\BeLenka\SAP\BillingDocumentRCG2\Model\ABillingDocumentPrcgElmntType',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                
            }
            throw $e;
        }
    }

    /**
     * Operation aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGetAsync
     *
     * Reads the header pricing elements of a specific billing document and specific pricing element.
     *
     * @param  string $billing_document Billing Document (required)
     * @param  string $pricing_procedure_step Step Number (required)
     * @param  string $pricing_procedure_counter Condition Counter (required)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGetAsync($billing_document, $pricing_procedure_step, $pricing_procedure_counter, $select = null, $expand = null, string $contentType = self::contentTypes['aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet'][0])
    {
        return $this->aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGetAsyncWithHttpInfo($billing_document, $pricing_procedure_step, $pricing_procedure_counter, $select, $expand, $contentType)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Operation aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGetAsyncWithHttpInfo
     *
     * Reads the header pricing elements of a specific billing document and specific pricing element.
     *
     * @param  string $billing_document Billing Document (required)
     * @param  string $pricing_procedure_step Step Number (required)
     * @param  string $pricing_procedure_counter Condition Counter (required)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGetAsyncWithHttpInfo($billing_document, $pricing_procedure_step, $pricing_procedure_counter, $select = null, $expand = null, string $contentType = self::contentTypes['aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet'][0])
    {
        $returnType = '\BeLenka\SAP\BillingDocumentRCG2\Model\ABillingDocumentPrcgElmntType';
        $request = $this->aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGetRequest($billing_document, $pricing_procedure_step, $pricing_procedure_counter, $select, $expand, $contentType);

        return $this->client
            ->sendAsync($request, $this->createHttpClientOption())
            ->then(
                function ($response) use ($returnType) {
                    if ($returnType === '\SplFileObject') {
                        $content = $response->getBody(); //stream goes to serializer
                    } else {
                        $content = (string) $response->getBody();
                        if ($returnType !== 'string') {
                            $content = json_decode($content);
                        }
                    }

                    return [
                        ObjectSerializer::deserialize($content, $returnType, []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                },
                function ($exception) {
                    $response = $exception->getResponse();
                    $statusCode = $response->getStatusCode();
                    throw new ApiException(
                        sprintf(
                            '[%d] Error connecting to the API (%s)',
                            $statusCode,
                            $exception->getRequest()->getUri()
                        ),
                        $statusCode,
                        $response->getHeaders(),
                        (string) $response->getBody()
                    );
                }
            );
    }

    /**
     * Create request for operation 'aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet'
     *
     * @param  string $billing_document Billing Document (required)
     * @param  string $pricing_procedure_step Step Number (required)
     * @param  string $pricing_procedure_counter Condition Counter (required)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGetRequest($billing_document, $pricing_procedure_step, $pricing_procedure_counter, $select = null, $expand = null, string $contentType = self::contentTypes['aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet'][0])
    {

        // verify the required parameter 'billing_document' is set
        if ($billing_document === null || (is_array($billing_document) && count($billing_document) === 0)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $billing_document when calling aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet'
            );
        }
        if (strlen($billing_document) > 10) {
            throw new \InvalidArgumentException('invalid length for "$billing_document" when calling HeaderPricingElementApi.aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet, must be smaller than or equal to 10.');
        }
        
        // verify the required parameter 'pricing_procedure_step' is set
        if ($pricing_procedure_step === null || (is_array($pricing_procedure_step) && count($pricing_procedure_step) === 0)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $pricing_procedure_step when calling aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet'
            );
        }
        if (strlen($pricing_procedure_step) > 3) {
            throw new \InvalidArgumentException('invalid length for "$pricing_procedure_step" when calling HeaderPricingElementApi.aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet, must be smaller than or equal to 3.');
        }
        
        // verify the required parameter 'pricing_procedure_counter' is set
        if ($pricing_procedure_counter === null || (is_array($pricing_procedure_counter) && count($pricing_procedure_counter) === 0)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $pricing_procedure_counter when calling aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet'
            );
        }
        if (strlen($pricing_procedure_counter) > 3) {
            throw new \InvalidArgumentException('invalid length for "$pricing_procedure_counter" when calling HeaderPricingElementApi.aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet, must be smaller than or equal to 3.');
        }
        
        
        

        $resourcePath = '/A_BillingDocumentPrcgElmnt(BillingDocument=\'{BillingDocument}\',PricingProcedureStep=\'{PricingProcedureStep}\',PricingProcedureCounter=\'{PricingProcedureCounter}\')';
        $formParams = [];
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $multipart = false;

        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $select,
            '$select', // param base name
            'array', // openApiType
            'form', // style
            false, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $expand,
            '$expand', // param base name
            'array', // openApiType
            'form', // style
            false, // explode
            false // required
        ) ?? []);


        // path params
        if ($billing_document !== null) {
            $resourcePath = str_replace(
                '{' . 'BillingDocument' . '}',
                ObjectSerializer::toPathValue($billing_document),
                $resourcePath
            );
        }
        // path params
        if ($pricing_procedure_step !== null) {
            $resourcePath = str_replace(
                '{' . 'PricingProcedureStep' . '}',
                ObjectSerializer::toPathValue($pricing_procedure_step),
                $resourcePath
            );
        }
        // path params
        if ($pricing_procedure_counter !== null) {
            $resourcePath = str_replace(
                '{' . 'PricingProcedureCounter' . '}',
                ObjectSerializer::toPathValue($pricing_procedure_counter),
                $resourcePath
            );
        }


        $headers = $this->headerSelector->selectHeaders(
            ['application/json', ],
            $contentType,
            $multipart
        );

        // for model (json/xml)
        if (count($formParams) > 0) {
            if ($multipart) {
                $multipartContents = [];
                foreach ($formParams as $formParamName => $formParamValue) {
                    $formParamValueItems = is_array($formParamValue) ? $formParamValue : [$formParamValue];
                    foreach ($formParamValueItems as $formParamValueItem) {
                        $multipartContents[] = [
                            'name' => $formParamName,
                            'contents' => $formParamValueItem
                        ];
                    }
                }
                // for HTTP post (form)
                $httpBody = new MultipartStream($multipartContents);

            } elseif (stripos($headers['Content-Type'], 'application/json') !== false) {
                # if Content-Type contains "application/json", json_encode the form parameters
                $httpBody = json_encode($formParams);
            } else {
                // for HTTP post (form)
                $httpBody = ObjectSerializer::buildQuery($formParams);
            }
        }

        // this endpoint requires HTTP basic authentication
        if (!empty($this->config->getUsername()) || !(empty($this->config->getPassword()))) {
            $headers['Authorization'] = 'Basic ' . base64_encode($this->config->getUsername() . ":" . $this->config->getPassword());
        }

        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $operationHost = $this->config->getHost();
        $query = ObjectSerializer::buildQuery($queryParams);
        return new Request(
            'GET',
            $operationHost . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Operation aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToBillingDocumentGet
     *
     * Reads the billing document header for a specific header pricing element.
     *
     * @param  string $billing_document Billing Document (required)
     * @param  string $pricing_procedure_step Step Number (required)
     * @param  string $pricing_procedure_counter Condition Counter (required)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToBillingDocumentGet'] to see the possible values for this operation
     *
     * @throws \BeLenka\SAP\BillingDocumentRCG2\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \BeLenka\SAP\BillingDocumentRCG2\Model\ABillingDocumentType|\BeLenka\SAP\BillingDocumentRCG2\Model\Error
     */
    public function aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToBillingDocumentGet($billing_document, $pricing_procedure_step, $pricing_procedure_counter, $select = null, $expand = null, string $contentType = self::contentTypes['aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToBillingDocumentGet'][0])
    {
        list($response) = $this->aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToBillingDocumentGetWithHttpInfo($billing_document, $pricing_procedure_step, $pricing_procedure_counter, $select, $expand, $contentType);
        return $response;
    }

    /**
     * Operation aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToBillingDocumentGetWithHttpInfo
     *
     * Reads the billing document header for a specific header pricing element.
     *
     * @param  string $billing_document Billing Document (required)
     * @param  string $pricing_procedure_step Step Number (required)
     * @param  string $pricing_procedure_counter Condition Counter (required)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToBillingDocumentGet'] to see the possible values for this operation
     *
     * @throws \BeLenka\SAP\BillingDocumentRCG2\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \BeLenka\SAP\BillingDocumentRCG2\Model\ABillingDocumentType|\BeLenka\SAP\BillingDocumentRCG2\Model\Error, HTTP status code, HTTP response headers (array of strings)
     */
    public function aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToBillingDocumentGetWithHttpInfo($billing_document, $pricing_procedure_step, $pricing_procedure_counter, $select = null, $expand = null, string $contentType = self::contentTypes['aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToBillingDocumentGet'][0])
    {
        $request = $this->aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToBillingDocumentGetRequest($billing_document, $pricing_procedure_step, $pricing_procedure_counter, $select, $expand, $contentType);

        try {
            $options = $this->createHttpClientOption();
            try {
                $response = $this->client->send($request, $options);
            } catch (RequestException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    (int) $e->getCode(),
                    $e->getResponse() ? $e->getResponse()->getHeaders() : null,
                    $e->getResponse() ? (string) $e->getResponse()->getBody() : null
                );
            } catch (ConnectException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    (int) $e->getCode(),
                    null,
                    null
                );
            }

            $statusCode = $response->getStatusCode();

            if ($statusCode < 200 || $statusCode > 299) {
                throw new ApiException(
                    sprintf(
                        '[%d] Error connecting to the API (%s)',
                        $statusCode,
                        (string) $request->getUri()
                    ),
                    $statusCode,
                    $response->getHeaders(),
                    (string) $response->getBody()
                );
            }

            switch($statusCode) {
                case 200:
                    if ('\BeLenka\SAP\BillingDocumentRCG2\Model\ABillingDocumentType' === '\SplFileObject') {
                        $content = $response->getBody(); //stream goes to serializer
                    } else {
                        $content = (string) $response->getBody();
                        if ('\BeLenka\SAP\BillingDocumentRCG2\Model\ABillingDocumentType' !== 'string') {
                            $content = json_decode($content);
                        }
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\BeLenka\SAP\BillingDocumentRCG2\Model\ABillingDocumentType', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                
            }

            $returnType = '\BeLenka\SAP\BillingDocumentRCG2\Model\ABillingDocumentType';
            if ($returnType === '\SplFileObject') {
                $content = $response->getBody(); //stream goes to serializer
            } else {
                $content = (string) $response->getBody();
                if ($returnType !== 'string') {
                    $content = json_decode($content);
                }
            }

            return [
                ObjectSerializer::deserialize($content, $returnType, []),
                $response->getStatusCode(),
                $response->getHeaders()
            ];

        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\BeLenka\SAP\BillingDocumentRCG2\Model\ABillingDocumentType',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                
            }
            throw $e;
        }
    }

    /**
     * Operation aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToBillingDocumentGetAsync
     *
     * Reads the billing document header for a specific header pricing element.
     *
     * @param  string $billing_document Billing Document (required)
     * @param  string $pricing_procedure_step Step Number (required)
     * @param  string $pricing_procedure_counter Condition Counter (required)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToBillingDocumentGet'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToBillingDocumentGetAsync($billing_document, $pricing_procedure_step, $pricing_procedure_counter, $select = null, $expand = null, string $contentType = self::contentTypes['aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToBillingDocumentGet'][0])
    {
        return $this->aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToBillingDocumentGetAsyncWithHttpInfo($billing_document, $pricing_procedure_step, $pricing_procedure_counter, $select, $expand, $contentType)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Operation aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToBillingDocumentGetAsyncWithHttpInfo
     *
     * Reads the billing document header for a specific header pricing element.
     *
     * @param  string $billing_document Billing Document (required)
     * @param  string $pricing_procedure_step Step Number (required)
     * @param  string $pricing_procedure_counter Condition Counter (required)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToBillingDocumentGet'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToBillingDocumentGetAsyncWithHttpInfo($billing_document, $pricing_procedure_step, $pricing_procedure_counter, $select = null, $expand = null, string $contentType = self::contentTypes['aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToBillingDocumentGet'][0])
    {
        $returnType = '\BeLenka\SAP\BillingDocumentRCG2\Model\ABillingDocumentType';
        $request = $this->aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToBillingDocumentGetRequest($billing_document, $pricing_procedure_step, $pricing_procedure_counter, $select, $expand, $contentType);

        return $this->client
            ->sendAsync($request, $this->createHttpClientOption())
            ->then(
                function ($response) use ($returnType) {
                    if ($returnType === '\SplFileObject') {
                        $content = $response->getBody(); //stream goes to serializer
                    } else {
                        $content = (string) $response->getBody();
                        if ($returnType !== 'string') {
                            $content = json_decode($content);
                        }
                    }

                    return [
                        ObjectSerializer::deserialize($content, $returnType, []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                },
                function ($exception) {
                    $response = $exception->getResponse();
                    $statusCode = $response->getStatusCode();
                    throw new ApiException(
                        sprintf(
                            '[%d] Error connecting to the API (%s)',
                            $statusCode,
                            $exception->getRequest()->getUri()
                        ),
                        $statusCode,
                        $response->getHeaders(),
                        (string) $response->getBody()
                    );
                }
            );
    }

    /**
     * Create request for operation 'aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToBillingDocumentGet'
     *
     * @param  string $billing_document Billing Document (required)
     * @param  string $pricing_procedure_step Step Number (required)
     * @param  string $pricing_procedure_counter Condition Counter (required)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToBillingDocumentGet'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToBillingDocumentGetRequest($billing_document, $pricing_procedure_step, $pricing_procedure_counter, $select = null, $expand = null, string $contentType = self::contentTypes['aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToBillingDocumentGet'][0])
    {

        // verify the required parameter 'billing_document' is set
        if ($billing_document === null || (is_array($billing_document) && count($billing_document) === 0)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $billing_document when calling aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToBillingDocumentGet'
            );
        }
        if (strlen($billing_document) > 10) {
            throw new \InvalidArgumentException('invalid length for "$billing_document" when calling HeaderPricingElementApi.aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToBillingDocumentGet, must be smaller than or equal to 10.');
        }
        
        // verify the required parameter 'pricing_procedure_step' is set
        if ($pricing_procedure_step === null || (is_array($pricing_procedure_step) && count($pricing_procedure_step) === 0)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $pricing_procedure_step when calling aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToBillingDocumentGet'
            );
        }
        if (strlen($pricing_procedure_step) > 3) {
            throw new \InvalidArgumentException('invalid length for "$pricing_procedure_step" when calling HeaderPricingElementApi.aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToBillingDocumentGet, must be smaller than or equal to 3.');
        }
        
        // verify the required parameter 'pricing_procedure_counter' is set
        if ($pricing_procedure_counter === null || (is_array($pricing_procedure_counter) && count($pricing_procedure_counter) === 0)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $pricing_procedure_counter when calling aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToBillingDocumentGet'
            );
        }
        if (strlen($pricing_procedure_counter) > 3) {
            throw new \InvalidArgumentException('invalid length for "$pricing_procedure_counter" when calling HeaderPricingElementApi.aBillingDocumentPrcgElmntBillingDocumentBillingDocumentPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToBillingDocumentGet, must be smaller than or equal to 3.');
        }
        
        
        

        $resourcePath = '/A_BillingDocumentPrcgElmnt(BillingDocument=\'{BillingDocument}\',PricingProcedureStep=\'{PricingProcedureStep}\',PricingProcedureCounter=\'{PricingProcedureCounter}\')/to_BillingDocument';
        $formParams = [];
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $multipart = false;

        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $select,
            '$select', // param base name
            'array', // openApiType
            'form', // style
            false, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $expand,
            '$expand', // param base name
            'array', // openApiType
            'form', // style
            false, // explode
            false // required
        ) ?? []);


        // path params
        if ($billing_document !== null) {
            $resourcePath = str_replace(
                '{' . 'BillingDocument' . '}',
                ObjectSerializer::toPathValue($billing_document),
                $resourcePath
            );
        }
        // path params
        if ($pricing_procedure_step !== null) {
            $resourcePath = str_replace(
                '{' . 'PricingProcedureStep' . '}',
                ObjectSerializer::toPathValue($pricing_procedure_step),
                $resourcePath
            );
        }
        // path params
        if ($pricing_procedure_counter !== null) {
            $resourcePath = str_replace(
                '{' . 'PricingProcedureCounter' . '}',
                ObjectSerializer::toPathValue($pricing_procedure_counter),
                $resourcePath
            );
        }


        $headers = $this->headerSelector->selectHeaders(
            ['application/json', ],
            $contentType,
            $multipart
        );

        // for model (json/xml)
        if (count($formParams) > 0) {
            if ($multipart) {
                $multipartContents = [];
                foreach ($formParams as $formParamName => $formParamValue) {
                    $formParamValueItems = is_array($formParamValue) ? $formParamValue : [$formParamValue];
                    foreach ($formParamValueItems as $formParamValueItem) {
                        $multipartContents[] = [
                            'name' => $formParamName,
                            'contents' => $formParamValueItem
                        ];
                    }
                }
                // for HTTP post (form)
                $httpBody = new MultipartStream($multipartContents);

            } elseif (stripos($headers['Content-Type'], 'application/json') !== false) {
                # if Content-Type contains "application/json", json_encode the form parameters
                $httpBody = json_encode($formParams);
            } else {
                // for HTTP post (form)
                $httpBody = ObjectSerializer::buildQuery($formParams);
            }
        }

        // this endpoint requires HTTP basic authentication
        if (!empty($this->config->getUsername()) || !(empty($this->config->getPassword()))) {
            $headers['Authorization'] = 'Basic ' . base64_encode($this->config->getUsername() . ":" . $this->config->getPassword());
        }

        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $operationHost = $this->config->getHost();
        $query = ObjectSerializer::buildQuery($queryParams);
        return new Request(
            'GET',
            $operationHost . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Operation aBillingDocumentPrcgElmntGet
     *
     * Reads header pricing elements of all billing documents.
     *
     * @param  int $top Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)
     * @param  int $skip Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string $filter Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)
     * @param  string $inlinecount Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)
     * @param  string[] $orderby Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aBillingDocumentPrcgElmntGet'] to see the possible values for this operation
     *
     * @throws \BeLenka\SAP\BillingDocumentRCG2\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return \BeLenka\SAP\BillingDocumentRCG2\Model\Wrapper3|\BeLenka\SAP\BillingDocumentRCG2\Model\Error
     */
    public function aBillingDocumentPrcgElmntGet($top = null, $skip = null, $filter = null, $inlinecount = null, $orderby = null, $select = null, $expand = null, string $contentType = self::contentTypes['aBillingDocumentPrcgElmntGet'][0])
    {
        list($response) = $this->aBillingDocumentPrcgElmntGetWithHttpInfo($top, $skip, $filter, $inlinecount, $orderby, $select, $expand, $contentType);
        return $response;
    }

    /**
     * Operation aBillingDocumentPrcgElmntGetWithHttpInfo
     *
     * Reads header pricing elements of all billing documents.
     *
     * @param  int $top Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)
     * @param  int $skip Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string $filter Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)
     * @param  string $inlinecount Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)
     * @param  string[] $orderby Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aBillingDocumentPrcgElmntGet'] to see the possible values for this operation
     *
     * @throws \BeLenka\SAP\BillingDocumentRCG2\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     * @return array of \BeLenka\SAP\BillingDocumentRCG2\Model\Wrapper3|\BeLenka\SAP\BillingDocumentRCG2\Model\Error, HTTP status code, HTTP response headers (array of strings)
     */
    public function aBillingDocumentPrcgElmntGetWithHttpInfo($top = null, $skip = null, $filter = null, $inlinecount = null, $orderby = null, $select = null, $expand = null, string $contentType = self::contentTypes['aBillingDocumentPrcgElmntGet'][0])
    {
        $request = $this->aBillingDocumentPrcgElmntGetRequest($top, $skip, $filter, $inlinecount, $orderby, $select, $expand, $contentType);

        try {
            $options = $this->createHttpClientOption();
            try {
                $response = $this->client->send($request, $options);
            } catch (RequestException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    (int) $e->getCode(),
                    $e->getResponse() ? $e->getResponse()->getHeaders() : null,
                    $e->getResponse() ? (string) $e->getResponse()->getBody() : null
                );
            } catch (ConnectException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    (int) $e->getCode(),
                    null,
                    null
                );
            }

            $statusCode = $response->getStatusCode();

            if ($statusCode < 200 || $statusCode > 299) {
                throw new ApiException(
                    sprintf(
                        '[%d] Error connecting to the API (%s)',
                        $statusCode,
                        (string) $request->getUri()
                    ),
                    $statusCode,
                    $response->getHeaders(),
                    (string) $response->getBody()
                );
            }

            switch($statusCode) {
                case 200:
                    if ('\BeLenka\SAP\BillingDocumentRCG2\Model\Wrapper3' === '\SplFileObject') {
                        $content = $response->getBody(); //stream goes to serializer
                    } else {
                        $content = (string) $response->getBody();
                        if ('\BeLenka\SAP\BillingDocumentRCG2\Model\Wrapper3' !== 'string') {
                            $content = json_decode($content);
                        }
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\BeLenka\SAP\BillingDocumentRCG2\Model\Wrapper3', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                
            }

            $returnType = '\BeLenka\SAP\BillingDocumentRCG2\Model\Wrapper3';
            if ($returnType === '\SplFileObject') {
                $content = $response->getBody(); //stream goes to serializer
            } else {
                $content = (string) $response->getBody();
                if ($returnType !== 'string') {
                    $content = json_decode($content);
                }
            }

            return [
                ObjectSerializer::deserialize($content, $returnType, []),
                $response->getStatusCode(),
                $response->getHeaders()
            ];

        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\BeLenka\SAP\BillingDocumentRCG2\Model\Wrapper3',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
                
            }
            throw $e;
        }
    }

    /**
     * Operation aBillingDocumentPrcgElmntGetAsync
     *
     * Reads header pricing elements of all billing documents.
     *
     * @param  int $top Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)
     * @param  int $skip Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string $filter Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)
     * @param  string $inlinecount Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)
     * @param  string[] $orderby Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aBillingDocumentPrcgElmntGet'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function aBillingDocumentPrcgElmntGetAsync($top = null, $skip = null, $filter = null, $inlinecount = null, $orderby = null, $select = null, $expand = null, string $contentType = self::contentTypes['aBillingDocumentPrcgElmntGet'][0])
    {
        return $this->aBillingDocumentPrcgElmntGetAsyncWithHttpInfo($top, $skip, $filter, $inlinecount, $orderby, $select, $expand, $contentType)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Operation aBillingDocumentPrcgElmntGetAsyncWithHttpInfo
     *
     * Reads header pricing elements of all billing documents.
     *
     * @param  int $top Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)
     * @param  int $skip Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string $filter Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)
     * @param  string $inlinecount Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)
     * @param  string[] $orderby Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aBillingDocumentPrcgElmntGet'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function aBillingDocumentPrcgElmntGetAsyncWithHttpInfo($top = null, $skip = null, $filter = null, $inlinecount = null, $orderby = null, $select = null, $expand = null, string $contentType = self::contentTypes['aBillingDocumentPrcgElmntGet'][0])
    {
        $returnType = '\BeLenka\SAP\BillingDocumentRCG2\Model\Wrapper3';
        $request = $this->aBillingDocumentPrcgElmntGetRequest($top, $skip, $filter, $inlinecount, $orderby, $select, $expand, $contentType);

        return $this->client
            ->sendAsync($request, $this->createHttpClientOption())
            ->then(
                function ($response) use ($returnType) {
                    if ($returnType === '\SplFileObject') {
                        $content = $response->getBody(); //stream goes to serializer
                    } else {
                        $content = (string) $response->getBody();
                        if ($returnType !== 'string') {
                            $content = json_decode($content);
                        }
                    }

                    return [
                        ObjectSerializer::deserialize($content, $returnType, []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                },
                function ($exception) {
                    $response = $exception->getResponse();
                    $statusCode = $response->getStatusCode();
                    throw new ApiException(
                        sprintf(
                            '[%d] Error connecting to the API (%s)',
                            $statusCode,
                            $exception->getRequest()->getUri()
                        ),
                        $statusCode,
                        $response->getHeaders(),
                        (string) $response->getBody()
                    );
                }
            );
    }

    /**
     * Create request for operation 'aBillingDocumentPrcgElmntGet'
     *
     * @param  int $top Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)
     * @param  int $skip Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string $filter Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)
     * @param  string $inlinecount Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)
     * @param  string[] $orderby Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)
     * @param  string[] $select Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)
     * @param  string[] $expand Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['aBillingDocumentPrcgElmntGet'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function aBillingDocumentPrcgElmntGetRequest($top = null, $skip = null, $filter = null, $inlinecount = null, $orderby = null, $select = null, $expand = null, string $contentType = self::contentTypes['aBillingDocumentPrcgElmntGet'][0])
    {

        if ($top !== null && $top < 0) {
            throw new \InvalidArgumentException('invalid value for "$top" when calling HeaderPricingElementApi.aBillingDocumentPrcgElmntGet, must be bigger than or equal to 0.');
        }
        
        if ($skip !== null && $skip < 0) {
            throw new \InvalidArgumentException('invalid value for "$skip" when calling HeaderPricingElementApi.aBillingDocumentPrcgElmntGet, must be bigger than or equal to 0.');
        }
        


        
        
        

        $resourcePath = '/A_BillingDocumentPrcgElmnt';
        $formParams = [];
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $multipart = false;

        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $top,
            '$top', // param base name
            'integer', // openApiType
            'form', // style
            true, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $skip,
            '$skip', // param base name
            'integer', // openApiType
            'form', // style
            true, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $filter,
            '$filter', // param base name
            'string', // openApiType
            'form', // style
            true, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $inlinecount,
            '$inlinecount', // param base name
            'string', // openApiType
            'form', // style
            true, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $orderby,
            '$orderby', // param base name
            'array', // openApiType
            'form', // style
            false, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $select,
            '$select', // param base name
            'array', // openApiType
            'form', // style
            false, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $expand,
            '$expand', // param base name
            'array', // openApiType
            'form', // style
            false, // explode
            false // required
        ) ?? []);




        $headers = $this->headerSelector->selectHeaders(
            ['application/json', ],
            $contentType,
            $multipart
        );

        // for model (json/xml)
        if (count($formParams) > 0) {
            if ($multipart) {
                $multipartContents = [];
                foreach ($formParams as $formParamName => $formParamValue) {
                    $formParamValueItems = is_array($formParamValue) ? $formParamValue : [$formParamValue];
                    foreach ($formParamValueItems as $formParamValueItem) {
                        $multipartContents[] = [
                            'name' => $formParamName,
                            'contents' => $formParamValueItem
                        ];
                    }
                }
                // for HTTP post (form)
                $httpBody = new MultipartStream($multipartContents);

            } elseif (stripos($headers['Content-Type'], 'application/json') !== false) {
                # if Content-Type contains "application/json", json_encode the form parameters
                $httpBody = json_encode($formParams);
            } else {
                // for HTTP post (form)
                $httpBody = ObjectSerializer::buildQuery($formParams);
            }
        }

        // this endpoint requires HTTP basic authentication
        if (!empty($this->config->getUsername()) || !(empty($this->config->getPassword()))) {
            $headers['Authorization'] = 'Basic ' . base64_encode($this->config->getUsername() . ":" . $this->config->getPassword());
        }

        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $operationHost = $this->config->getHost();
        $query = ObjectSerializer::buildQuery($queryParams);
        return new Request(
            'GET',
            $operationHost . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Create http client option
     *
     * @throws \RuntimeException on file opening failure
     * @return array of http client options
     */
    protected function createHttpClientOption()
    {
        $options = [];
        if ($this->config->getDebug()) {
            $options[RequestOptions::DEBUG] = fopen($this->config->getDebugFile(), 'a');
            if (!$options[RequestOptions::DEBUG]) {
                throw new \RuntimeException('Failed to open the debug file: ' . $this->config->getDebugFile());
            }
        }

        return $options;
    }
}
