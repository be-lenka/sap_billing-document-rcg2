<?php
/**
 * APIBILLINGDOCUMENTSRVABillingDocumentTypeUpdateTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  BeLenka\SAP\BillingDocumentRCG2
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Billing Document - Read, Cancel, GetPDF
 *
 * Consumers of this inbound service can read and cancel billing documents inside your system by sending OData requests. In addition, they can request entire billing documents in PDF format. The service makes billing document data available through its header, item, business partner, and pricing element entities.
 *
 * The version of the OpenAPI document: 1.1.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace BeLenka\SAP\BillingDocumentRCG2\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * APIBILLINGDOCUMENTSRVABillingDocumentTypeUpdateTest Class Doc Comment
 *
 * @category    Class
 * @description APIBILLINGDOCUMENTSRVABillingDocumentTypeUpdate
 * @package     BeLenka\SAP\BillingDocumentRCG2
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class APIBILLINGDOCUMENTSRVABillingDocumentTypeUpdateTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "APIBILLINGDOCUMENTSRVABillingDocumentTypeUpdate"
     */
    public function testAPIBILLINGDOCUMENTSRVABillingDocumentTypeUpdate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sd_document_category"
     */
    public function testPropertySdDocumentCategory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "billing_document_category"
     */
    public function testPropertyBillingDocumentCategory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "billing_document_type"
     */
    public function testPropertyBillingDocumentType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "creation_date"
     */
    public function testPropertyCreationDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "creation_time"
     */
    public function testPropertyCreationTime()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "last_change_date"
     */
    public function testPropertyLastChangeDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "last_change_date_time"
     */
    public function testPropertyLastChangeDateTime()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "logical_system"
     */
    public function testPropertyLogicalSystem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sales_organization"
     */
    public function testPropertySalesOrganization()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "distribution_channel"
     */
    public function testPropertyDistributionChannel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "division"
     */
    public function testPropertyDivision()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "billing_document_date"
     */
    public function testPropertyBillingDocumentDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "billing_document_is_cancelled"
     */
    public function testPropertyBillingDocumentIsCancelled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cancelled_billing_document"
     */
    public function testPropertyCancelledBillingDocument()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "foreign_trade"
     */
    public function testPropertyForeignTrade()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_export_delivery"
     */
    public function testPropertyIsExportDelivery()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "billing_doc_combination_criteria"
     */
    public function testPropertyBillingDocCombinationCriteria()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "manual_invoice_maint_is_relevant"
     */
    public function testPropertyManualInvoiceMaintIsRelevant()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_intrastat_reporting_relevant"
     */
    public function testPropertyIsIntrastatReportingRelevant()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_intrastat_reporting_excluded"
     */
    public function testPropertyIsIntrastatReportingExcluded()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "total_net_amount"
     */
    public function testPropertyTotalNetAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "transaction_currency"
     */
    public function testPropertyTransactionCurrency()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "statistics_currency"
     */
    public function testPropertyStatisticsCurrency()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tax_amount"
     */
    public function testPropertyTaxAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "total_gross_amount"
     */
    public function testPropertyTotalGrossAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customer_price_group"
     */
    public function testPropertyCustomerPriceGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "price_list_type"
     */
    public function testPropertyPriceListType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tax_departure_country"
     */
    public function testPropertyTaxDepartureCountry()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "vat_registration"
     */
    public function testPropertyVatRegistration()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "vat_registration_origin"
     */
    public function testPropertyVatRegistrationOrigin()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "vat_registration_country"
     */
    public function testPropertyVatRegistrationCountry()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hierarchy_type_pricing"
     */
    public function testPropertyHierarchyTypePricing()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customer_tax_classification1"
     */
    public function testPropertyCustomerTaxClassification1()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customer_tax_classification2"
     */
    public function testPropertyCustomerTaxClassification2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customer_tax_classification3"
     */
    public function testPropertyCustomerTaxClassification3()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customer_tax_classification4"
     */
    public function testPropertyCustomerTaxClassification4()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customer_tax_classification5"
     */
    public function testPropertyCustomerTaxClassification5()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customer_tax_classification6"
     */
    public function testPropertyCustomerTaxClassification6()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customer_tax_classification7"
     */
    public function testPropertyCustomerTaxClassification7()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customer_tax_classification8"
     */
    public function testPropertyCustomerTaxClassification8()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customer_tax_classification9"
     */
    public function testPropertyCustomerTaxClassification9()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_eu_triangular_deal"
     */
    public function testPropertyIsEuTriangularDeal()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sd_pricing_procedure"
     */
    public function testPropertySdPricingProcedure()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "shipping_condition"
     */
    public function testPropertyShippingCondition()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "incoterms_version"
     */
    public function testPropertyIncotermsVersion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "incoterms_classification"
     */
    public function testPropertyIncotermsClassification()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "incoterms_transfer_location"
     */
    public function testPropertyIncotermsTransferLocation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "incoterms_location1"
     */
    public function testPropertyIncotermsLocation1()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "incoterms_location2"
     */
    public function testPropertyIncotermsLocation2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "payer_party"
     */
    public function testPropertyPayerParty()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "contract_account"
     */
    public function testPropertyContractAccount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customer_payment_terms"
     */
    public function testPropertyCustomerPaymentTerms()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "payment_method"
     */
    public function testPropertyPaymentMethod()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "payment_reference"
     */
    public function testPropertyPaymentReference()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "fixed_value_date"
     */
    public function testPropertyFixedValueDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "additional_value_days"
     */
    public function testPropertyAdditionalValueDays()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sepa_mandate"
     */
    public function testPropertySepaMandate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "company_code"
     */
    public function testPropertyCompanyCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "fiscal_year"
     */
    public function testPropertyFiscalYear()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "accounting_document"
     */
    public function testPropertyAccountingDocument()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customer_account_assignment_group"
     */
    public function testPropertyCustomerAccountAssignmentGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "accounting_exchange_rate_is_set"
     */
    public function testPropertyAccountingExchangeRateIsSet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "abslt_accounting_exchange_rate"
     */
    public function testPropertyAbsltAccountingExchangeRate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "acctg_exchange_rate_is_indrct_qtan"
     */
    public function testPropertyAcctgExchangeRateIsIndrctQtan()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "exchange_rate_date"
     */
    public function testPropertyExchangeRateDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "exchange_rate_type"
     */
    public function testPropertyExchangeRateType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "document_reference_id"
     */
    public function testPropertyDocumentReferenceId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "assignment_reference"
     */
    public function testPropertyAssignmentReference()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dunning_area"
     */
    public function testPropertyDunningArea()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dunning_blocking_reason"
     */
    public function testPropertyDunningBlockingReason()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dunning_key"
     */
    public function testPropertyDunningKey()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "internal_financial_document"
     */
    public function testPropertyInternalFinancialDocument()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_relevant_for_accrual"
     */
    public function testPropertyIsRelevantForAccrual()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sold_to_party"
     */
    public function testPropertySoldToParty()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "partner_company"
     */
    public function testPropertyPartnerCompany()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchase_order_by_customer"
     */
    public function testPropertyPurchaseOrderByCustomer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customer_group"
     */
    public function testPropertyCustomerGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "country"
     */
    public function testPropertyCountry()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "city_code"
     */
    public function testPropertyCityCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sales_district"
     */
    public function testPropertySalesDistrict()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "region"
     */
    public function testPropertyRegion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "county"
     */
    public function testPropertyCounty()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "credit_control_area"
     */
    public function testPropertyCreditControlArea()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customer_rebate_agreement"
     */
    public function testPropertyCustomerRebateAgreement()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sales_document_condition"
     */
    public function testPropertySalesDocumentCondition()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "overall_sd_process_status"
     */
    public function testPropertyOverallSdProcessStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "overall_billing_status"
     */
    public function testPropertyOverallBillingStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "accounting_posting_status"
     */
    public function testPropertyAccountingPostingStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "accounting_transfer_status"
     */
    public function testPropertyAccountingTransferStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "billing_issue_type"
     */
    public function testPropertyBillingIssueType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "invoice_list_status"
     */
    public function testPropertyInvoiceListStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ovrl_itm_general_incompletion_sts"
     */
    public function testPropertyOvrlItmGeneralIncompletionSts()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "overall_pricing_incompletion_sts"
     */
    public function testPropertyOverallPricingIncompletionSts()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "invoice_clearing_status"
     */
    public function testPropertyInvoiceClearingStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "billing_document_list_type"
     */
    public function testPropertyBillingDocumentListType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "billing_document_list_date"
     */
    public function testPropertyBillingDocumentListDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
