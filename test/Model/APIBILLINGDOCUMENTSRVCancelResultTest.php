<?php
/**
 * APIBILLINGDOCUMENTSRVCancelResultTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  BeLenka\SAP\BillingDocumentRCG2
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Billing Document - Read, Cancel, GetPDF
 *
 * Consumers of this inbound service can read and cancel billing documents inside your system by sending OData requests. In addition, they can request entire billing documents in PDF format. The service makes billing document data available through its header, item, business partner, and pricing element entities.
 *
 * The version of the OpenAPI document: 1.1.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace BeLenka\SAP\BillingDocumentRCG2\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * APIBILLINGDOCUMENTSRVCancelResultTest Class Doc Comment
 *
 * @category    Class
 * @description APIBILLINGDOCUMENTSRVCancelResult
 * @package     BeLenka\SAP\BillingDocumentRCG2
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class APIBILLINGDOCUMENTSRVCancelResultTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "APIBILLINGDOCUMENTSRVCancelResult"
     */
    public function testAPIBILLINGDOCUMENTSRVCancelResult()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "billing_document"
     */
    public function testPropertyBillingDocument()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cancellation_billing_document"
     */
    public function testPropertyCancellationBillingDocument()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "system_message_type"
     */
    public function testPropertySystemMessageType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "system_message_identification"
     */
    public function testPropertySystemMessageIdentification()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "system_message_number"
     */
    public function testPropertySystemMessageNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "system_message_text"
     */
    public function testPropertySystemMessageText()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "system_message_variable1"
     */
    public function testPropertySystemMessageVariable1()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "system_message_variable2"
     */
    public function testPropertySystemMessageVariable2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "system_message_variable3"
     */
    public function testPropertySystemMessageVariable3()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "system_message_variable4"
     */
    public function testPropertySystemMessageVariable4()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
