<?php
/**
 * CollectionOfABillingDocumentPrcgElmntTypeTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  BeLenka\SAP\BillingDocumentRCG2
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Billing Document - Read, Cancel, GetPDF
 *
 * Consumers of this inbound service can read and cancel billing documents inside your system by sending OData requests. In addition, they can request entire billing documents in PDF format. The service makes billing document data available through its header, item, business partner, and pricing element entities.
 *
 * The version of the OpenAPI document: 1.1.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace BeLenka\SAP\BillingDocumentRCG2\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * CollectionOfABillingDocumentPrcgElmntTypeTest Class Doc Comment
 *
 * @category    Class
 * @description CollectionOfABillingDocumentPrcgElmntType
 * @package     BeLenka\SAP\BillingDocumentRCG2
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class CollectionOfABillingDocumentPrcgElmntTypeTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "CollectionOfABillingDocumentPrcgElmntType"
     */
    public function testCollectionOfABillingDocumentPrcgElmntType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "__count"
     */
    public function testPropertyCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "results"
     */
    public function testPropertyResults()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
